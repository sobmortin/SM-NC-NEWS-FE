{"ast":null,"code":"import _toConsumableArray from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/src/Components/Comments.jsx\";\nimport React, { Component } from 'react';\nimport { fetchCommentsForArticle, postCommentOnArticle, deleteComment } from '../utils/api';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: [],\n      body: ''\n    };\n\n    _this.getCommentsForArticle = function (articleID) {\n      fetchCommentsForArticle(articleID).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          comments: data.comments\n        });\n      });\n    };\n\n    _this.handleCommentChange = function (event) {\n      return _this.setState({\n        body: event.target.value\n      });\n    };\n\n    _this.handleCommentSubmit = function (event) {\n      event.preventDefault();\n      var body = _this.state.body;\n      var _this$props = _this.props,\n          id = _this$props.id,\n          loggedInUser = _this$props.loggedInUser;\n      var user = loggedInUser.username;\n      postCommentOnArticle(id, user, body).then(function (res) {\n        var comment = _this.data.comment;\n\n        _this.setState({\n          comments: [comment].concat(_toConsumableArray(_this.state.comments))\n        });\n      });\n    };\n\n    _this.handleCommentDelete = function (event) {\n      event.preventDefault();\n      var commentID = event.target.value;\n      var articleID = _this.props.id;\n      console.log(commentID);\n      deleteComment(articleID, commentID).then(function (res) {\n        console.log(res);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props);\n      return this.getCommentsForArticle(this.props.id);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevState.comments !== this.state.comments) {\n        this.getCommentsForArticle(this.props.id);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var comments = this.state.comments;\n      var username = this.props.loggedInUser.username;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"\",\n        className: \"comment-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"comment-box\",\n        rows: \"2\",\n        columns: \"50\",\n        type: \"text\",\n        onChange: this.handleCommentChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"comment-button\",\n        onClick: this.handleCommentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Post Comment\"), React.createElement(\"ul\", {\n        className: \"Comments-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, comments.map(function (comment) {\n        var votes = comment.votes,\n            created_at = comment.created_at,\n            author = comment.author,\n            comment_id = comment.comment_id,\n            body = comment.body;\n        return React.createElement(\"li\", {\n          key: comment_id,\n          className: \"Comments-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \" \", body), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, author), \" \", ' | ', \" \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, votes), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, created_at), author === username && React.createElement(\"button\", {\n          value: comment_id,\n          onClick: _this2.handleCommentDelete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"delete\"));\n      })));\n    }\n  }]);\n\n  return Comments;\n}(Component); //spread operator in state\n\n\nexport default Comments;","map":{"version":3,"sources":["/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/src/Components/Comments.jsx"],"names":["React","Component","fetchCommentsForArticle","postCommentOnArticle","deleteComment","Comments","state","comments","body","getCommentsForArticle","articleID","then","data","setState","handleCommentChange","event","target","value","handleCommentSubmit","preventDefault","props","id","loggedInUser","user","username","res","comment","handleCommentDelete","commentID","console","log","prevProps","prevState","map","votes","created_at","author","comment_id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {\n\tfetchCommentsForArticle,\n\tpostCommentOnArticle,\n\tdeleteComment,\n} from '../utils/api';\n\nclass Comments extends Component {\n\tstate = {\n\t\tcomments: [],\n\t\tbody: '',\n\t};\n\tcomponentDidMount() {\n\t\tconsole.log(this.props);\n\t\treturn this.getCommentsForArticle(this.props.id);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.comments !== this.state.comments) {\n\t\t\tthis.getCommentsForArticle(this.props.id);\n\t\t}\n\t}\n\trender() {\n\t\tconst {comments} = this.state;\n\t\tconst {username} = this.props.loggedInUser;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form action=\"\" className=\"comment-form\">\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"comment-box\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t\tcolumns=\"50\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={this.handleCommentChange}\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t\t<button className=\"comment-button\" onClick={this.handleCommentSubmit}>\n\t\t\t\t\tPost Comment\n\t\t\t\t</button>\n\n\t\t\t\t<ul className=\"Comments-container\">\n\t\t\t\t\t{comments.map((comment) => {\n\t\t\t\t\t\tconst {votes, created_at, author, comment_id, body} = comment;\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={comment_id} className=\"Comments-item\">\n\t\t\t\t\t\t\t\t<p className=\"body\"> {body}</p>\n\t\t\t\t\t\t\t\t<span>{author}</span> {' | '} <span>{votes}</span>\n\t\t\t\t\t\t\t\t<p>{created_at}</p>\n\t\t\t\t\t\t\t\t{author === username && (\n\t\t\t\t\t\t\t\t\t<button value={comment_id} onClick={this.handleCommentDelete}>\n\t\t\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\tgetCommentsForArticle = (articleID) => {\n\t\tfetchCommentsForArticle(articleID).then(({data}) => {\n\t\t\tthis.setState({comments: data.comments});\n\t\t});\n\t};\n\thandleCommentChange = (event) => {\n\t\treturn this.setState({body: event.target.value});\n\t};\n\thandleCommentSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst {body} = this.state;\n\t\tconst {id, loggedInUser} = this.props;\n\t\tconst user = loggedInUser.username;\n\t\tpostCommentOnArticle(id, user, body).then((res) => {\n\t\t\tconst {comment} = this.data;\n\t\t\tthis.setState({comments: [comment, ...this.state.comments]});\n\t\t});\n\t};\n\n\thandleCommentDelete = (event) => {\n\t\tevent.preventDefault();\n\t\tconst {value: commentID} = event.target;\n\t\tconst {id: articleID} = this.props;\n\t\tconsole.log(commentID);\n\t\tdeleteComment(articleID, commentID).then((res) => {\n\t\t\tconsole.log(res);\n\t\t});\n\t};\n}\n\n//spread operator in state\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}