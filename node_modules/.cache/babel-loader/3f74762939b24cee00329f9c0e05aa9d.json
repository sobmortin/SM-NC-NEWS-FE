{"ast":null,"code":"import _classCallCheck from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/src/Components/Comments.jsx\";\nimport React, { Component } from 'react';\nimport { fetchCommentsForArticle, postCommentOnArticle } from '../utils/api';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: [],\n      addedComment: ''\n    };\n\n    _this.getCommentsForArticle = function (articleID) {\n      fetchCommentsForArticle(articleID).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          comments: data.comments\n        });\n      });\n    };\n\n    _this.handleCommentChange = function (event) {\n      return _this.setState({\n        addedComment: event.target.value\n      });\n    };\n\n    _this.handleCommentSubmit = function (event) {\n      event.preventDefault();\n      var addedComment = _this.state.addedComment;\n      var _this$props = _this.props,\n          id = _this$props.id,\n          user = _this$props.user;\n      console.log('body', _this.state.addedComment);\n      console.log(id, use);\n      console.log(_this.props);\n      postCommentOnArticle(articleID).then();\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return this.getCommentsForArticle(this.props.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var comments = this.state.comments;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"comment-box\",\n        type: \"text\",\n        onChange: this.handleCommentChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleCommentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Post Comment\")), React.createElement(\"ul\", {\n        className: \"Comments-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, comments.map(function (comment) {\n        var votes = comment.votes,\n            created_at = comment.created_at,\n            author = comment.author,\n            comment_id = comment.comment_id,\n            body = comment.body;\n        return React.createElement(\"li\", {\n          key: comment_id,\n          className: \"Comments-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \" \", body), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, author), \" \", ' | ', \" \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, votes), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, created_at));\n      })));\n    }\n  }]);\n\n  return Comments;\n}(Component); //spread operator in state\n\n\nexport default Comments;","map":{"version":3,"sources":["/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/src/Components/Comments.jsx"],"names":["React","Component","fetchCommentsForArticle","postCommentOnArticle","Comments","state","comments","addedComment","getCommentsForArticle","articleID","then","data","setState","handleCommentChange","event","target","value","handleCommentSubmit","preventDefault","props","id","user","console","log","use","map","comment","votes","created_at","author","comment_id","body"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,uBAAR,EAAiCC,oBAAjC,QAA4D,cAA5D;;IAEMC,Q;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,YAAY,EAAE;AAFP,K;;UAoCRC,qB,GAAwB,UAACC,SAAD,EAAe;AACtCP,MAAAA,uBAAuB,CAACO,SAAD,CAAvB,CAAmCC,IAAnC,CAAwC,gBAAY;AAAA,YAAVC,IAAU,QAAVA,IAAU;;AACnD,cAAKC,QAAL,CAAc;AAACN,UAAAA,QAAQ,EAAEK,IAAI,CAACL;AAAhB,SAAd;AACA,OAFD;AAGA,K;;UACDO,mB,GAAsB,UAACC,KAAD,EAAW;AAChC,aAAO,MAAKF,QAAL,CAAc;AAACL,QAAAA,YAAY,EAAEO,KAAK,CAACC,MAAN,CAAaC;AAA5B,OAAd,CAAP;AACA,K;;UACDC,mB,GAAsB,UAACH,KAAD,EAAW;AAChCA,MAAAA,KAAK,CAACI,cAAN;AADgC,UAEzBX,YAFyB,GAET,MAAKF,KAFI,CAEzBE,YAFyB;AAAA,wBAGb,MAAKY,KAHQ;AAAA,UAGzBC,EAHyB,eAGzBA,EAHyB;AAAA,UAGrBC,IAHqB,eAGrBA,IAHqB;AAIhCC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,MAAKlB,KAAL,CAAWE,YAA/B;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ,EAAgBI,GAAhB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKJ,KAAjB;AACAhB,MAAAA,oBAAoB,CAACM,SAAD,CAApB,CAAgCC,IAAhC;AACA,K;;;;;;;wCAhDmB;AACnB,aAAO,KAAKF,qBAAL,CAA2B,KAAKW,KAAL,CAAWC,EAAtC,CAAP;AACA;;;6BAEQ;AAAA,UACDd,QADC,GACW,KAAKD,KADhB,CACDC,QADC;AAGR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAM,QAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AACC,QAAA,SAAS,EAAC,aADX;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,QAAQ,EAAE,KAAKO,mBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAMC;AAAQ,QAAA,OAAO,EAAE,KAAKI,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAND,CADD,EASC;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEX,QAAQ,CAACmB,GAAT,CAAa,UAACC,OAAD,EAAa;AAAA,YACnBC,KADmB,GAC4BD,OAD5B,CACnBC,KADmB;AAAA,YACZC,UADY,GAC4BF,OAD5B,CACZE,UADY;AAAA,YACAC,MADA,GAC4BH,OAD5B,CACAG,MADA;AAAA,YACQC,UADR,GAC4BJ,OAD5B,CACQI,UADR;AAAA,YACoBC,IADpB,GAC4BL,OAD5B,CACoBK,IADpB;AAE1B,eACC;AAAI,UAAA,GAAG,EAAED,UAAT;AAAqB,UAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAsBC,IAAtB,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOF,MAAP,CAFD,OAEwB,KAFxB,OAE+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOF,KAAP,CAF/B,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIC,UAAJ,CAHD,CADD;AAOA,OATA,CADF,CATD,CADD;AAwBA;;;;EApCqB3B,S,GAwDvB;;;AAEA,eAAeG,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport {fetchCommentsForArticle, postCommentOnArticle} from '../utils/api';\n\nclass Comments extends Component {\n\tstate = {\n\t\tcomments: [],\n\t\taddedComment: '',\n\t};\n\tcomponentDidMount() {\n\t\treturn this.getCommentsForArticle(this.props.id);\n\t}\n\n\trender() {\n\t\tconst {comments} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form action=\"\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"comment-box\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={this.handleCommentChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={this.handleCommentSubmit}>Post Comment</button>\n\t\t\t\t</form>\n\t\t\t\t<ul className=\"Comments-container\">\n\t\t\t\t\t{comments.map((comment) => {\n\t\t\t\t\t\tconst {votes, created_at, author, comment_id, body} = comment;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={comment_id} className=\"Comments-item\">\n\t\t\t\t\t\t\t\t<p className=\"body\"> {body}</p>\n\t\t\t\t\t\t\t\t<span>{author}</span> {' | '} <span>{votes}</span>\n\t\t\t\t\t\t\t\t<p>{created_at}</p>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\tgetCommentsForArticle = (articleID) => {\n\t\tfetchCommentsForArticle(articleID).then(({data}) => {\n\t\t\tthis.setState({comments: data.comments});\n\t\t});\n\t};\n\thandleCommentChange = (event) => {\n\t\treturn this.setState({addedComment: event.target.value});\n\t};\n\thandleCommentSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst {addedComment} = this.state;\n\t\tconst {id, user} = this.props;\n\t\tconsole.log('body', this.state.addedComment);\n\t\tconsole.log(id, use);\n\t\tconsole.log(this.props);\n\t\tpostCommentOnArticle(articleID).then();\n\t};\n}\n\n//spread operator in state\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}