{"ast":null,"code":"import _classCallCheck from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/src/Components/Comments.jsx\";\nimport React, { Component } from 'react';\nimport { fetchCommentsForArticle } from '../utils/api';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: []\n    };\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return this.getCommentsForArticle(this.props.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var comments = this.state.comments;\n      console.log(comments);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"Comments-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, comments.map(function (comment) {\n        var votes = comment.votes,\n            created_at = comment.created_at,\n            author = comment.author,\n            comment_id = comment.comment_id,\n            body = comment.body;\n        return React.createElement(\"li\", {\n          key: comment_id,\n          className: \"Comments-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \" \", body), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, author), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, created_at));\n      })));\n    }\n  }, {\n    key: \"getCommentsForArticle\",\n    value: function getCommentsForArticle(articleID) {\n      var _this2 = this;\n\n      fetchCommentsForArticle(articleID).then(function (_ref) {\n        var data = _ref.data;\n\n        _this2.setState({\n          comments: data.comments\n        });\n      });\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nexport default Comments;","map":{"version":3,"sources":["/Users/sebastianmartin/Desktop/Northcoders /5-FRONTEND2/FE2-NC-News/sm-nc-news/src/Components/Comments.jsx"],"names":["React","Component","fetchCommentsForArticle","Comments","state","comments","getCommentsForArticle","props","id","console","log","map","comment","votes","created_at","author","comment_id","body","articleID","then","data","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,uBAAR,QAAsC,cAAtC;;IAEMC,Q;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,QAAQ,EAAE;AADH,K;;;;;;wCAGY;AACnB,aAAO,KAAKC,qBAAL,CAA2B,KAAKC,KAAL,CAAWC,EAAtC,CAAP;AACA;;;6BAEQ;AAAA,UACDH,QADC,GACW,KAAKD,KADhB,CACDC,QADC;AAERI,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEA,QAAQ,CAACM,GAAT,CAAa,UAACC,OAAD,EAAa;AAAA,YACnBC,KADmB,GAC4BD,OAD5B,CACnBC,KADmB;AAAA,YACZC,UADY,GAC4BF,OAD5B,CACZE,UADY;AAAA,YACAC,MADA,GAC4BH,OAD5B,CACAG,MADA;AAAA,YACQC,UADR,GAC4BJ,OAD5B,CACQI,UADR;AAAA,YACoBC,IADpB,GAC4BL,OAD5B,CACoBK,IADpB;AAE1B,eACC;AAAI,UAAA,GAAG,EAAED,UAAT;AAAqB,UAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAKC,IAAL,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIF,MAAJ,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,UAAJ,CAHD,CADD;AAOA,OATA,CADF,CADD,CADD;AAgBA;;;0CACqBI,S,EAAW;AAAA;;AAChChB,MAAAA,uBAAuB,CAACgB,SAAD,CAAvB,CAAmCC,IAAnC,CAAwC,gBAAY;AAAA,YAAVC,IAAU,QAAVA,IAAU;;AACnD,QAAA,MAAI,CAACC,QAAL,CAAc;AAAChB,UAAAA,QAAQ,EAAEe,IAAI,CAACf;AAAhB,SAAd;AACA,OAFD;AAGA;;;;EAjCqBJ,S;;AAoCvB,eAAeE,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport {fetchCommentsForArticle} from '../utils/api';\n\nclass Comments extends Component {\n\tstate = {\n\t\tcomments: [],\n\t};\n\tcomponentDidMount() {\n\t\treturn this.getCommentsForArticle(this.props.id);\n\t}\n\n\trender() {\n\t\tconst {comments} = this.state;\n\t\tconsole.log(comments);\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ul className=\"Comments-container\">\n\t\t\t\t\t{comments.map((comment) => {\n\t\t\t\t\t\tconst {votes, created_at, author, comment_id, body} = comment;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={comment_id} className=\"Comments-item\">\n\t\t\t\t\t\t\t\t<p> {body}</p>\n\t\t\t\t\t\t\t\t<p>{author}</p>\n\t\t\t\t\t\t\t\t<p>{created_at}</p>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\tgetCommentsForArticle(articleID) {\n\t\tfetchCommentsForArticle(articleID).then(({data}) => {\n\t\t\tthis.setState({comments: data.comments});\n\t\t});\n\t}\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}